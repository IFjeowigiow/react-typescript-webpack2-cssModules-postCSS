// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> @renders in default state 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <header
    className="header"
  >
    <h1>
      Hello, 
    </h1>
    <h3>
      Header background Color from PostCSS =&gt; var(--headerBackground): 
      header_bg
    </h3>
  </header>,
  "nodes": Array [
    <header
      className="header"
    >
      <h1>
        Hello, 
      </h1>
      <h3>
        Header background Color from PostCSS =&gt; var(--headerBackground): 
        header_bg
      </h3>
    </header>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Header>
         
         
      </Header>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Header {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": Array [
            " ",
            null,
            " ",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <header
          className="header"
        >
          <h1>
            Hello, 
          </h1>
          <h3>
            Header background Color from PostCSS =&gt; var(--headerBackground): 
            header_bg
          </h3>
        </header>,
        "_debugID": 2,
        "_renderedOutput": <header
          className="header"
        >
          <h1>
            Hello, 
          </h1>
          <h3>
            Header background Color from PostCSS =&gt; var(--headerBackground): 
            header_bg
          </h3>
        </header>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Header>
     
     
  </Header>,
}
`;
